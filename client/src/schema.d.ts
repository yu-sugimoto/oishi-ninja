/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/recipes/ranking": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ヘッダーでした国のレシピランキングを取得
         *      */
        get: operations["getRecipeRanking"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/recipes/{recipeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** レシピを取得。ヘッダーで指定された国のレシピを取得
         *      */
        get: operations["getRecipeById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/recipes/{recipeId}/likes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** レシピをいいねする。ヘッダーで指定された国のレシピをいいねする。
         *      */
        post: operations["likeRecipeById"];
        /** レシピのいいねを削除する。ヘッダーで指定された国のレシピのいいねを削除する。 */
        delete: operations["unlikeRecipeById"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Pagination: {
            total?: number;
            offset?: number;
            limit?: number;
        };
        Recipe: {
            /**
             * Format: uuid
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * @description 名称
             * @example カレーライス
             */
            name: string;
            /**
             * Format: url
             * @description サムネイル画像のURL
             * @example https://example.com/recipe.jpg
             */
            thumbnail: string;
            /**
             * @description 作り方
             * @example 1. 材料を切る
             *     2. 玉ねぎを炒める
             *     3. 肉を加えて炒める
             *     4. 水を加えて煮込む
             *     5. ルーを加えてさらに煮込む
             *
             */
            instructions: string;
            ingredientQuantities: components["schemas"]["IngredientQuantity"][];
            /** @description いいねの数 */
            likes: number;
        };
        Ingredient: {
            /**
             * Format: uuid
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * @description 材料の名称
             * @example 玉ねぎ
             */
            name: string;
        };
        IngredientQuantity: {
            ingredient: components["schemas"]["Ingredient"];
            /**
             * @description 材料の量
             * @example 1個
             */
            quantity: string;
        };
        RecipeRankingBody: {
            recipes: components["schemas"]["Recipe"][];
            pagination: components["schemas"]["Pagination"];
        };
        InvalidCountryBody: {
            /**
             * @description エラーメッセージ
             * @example Invalid country code
             */
            message: string;
        };
        LikeResultBody: {
            /**
             * @description メッセージ
             * @example いいねしました
             */
            message: string;
            /** @description いいねの数 */
            likes: number;
        };
        NotFoundBody: {
            /**
             * @description エラーメッセージ
             * @example Not found
             */
            message: string;
        };
    };
    responses: {
        /** @description サーバーエラー */
        InternalServerErrorResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description エラーメッセージ
                     * @example Internal server error
                     */
                    message: string;
                };
            };
        };
        /** @description レシピの一覧 */
        GetRecipeRankingOkResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["RecipeRankingBody"];
            };
        };
        /** @description 不正なリクエスト */
        GetRecipeRankingBadRequestResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["InvalidCountryBody"];
            };
        };
        /** @description レシピ */
        GetRecipeOkResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Recipe"];
            };
        };
        /** @description 不正なリクエスト */
        GetRecipeBadRequestResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["InvalidCountryBody"];
            };
        };
        /** @description レシピが見つからない */
        GetRecipeNotFoundResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["NotFoundBody"];
            };
        };
        /** @description いいね成功 */
        LikeRecipeOkResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["LikeResultBody"];
            };
        };
        /** @description 不正なリクエスト */
        LikeRecipeBadRequestResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["InvalidCountryBody"];
            };
        };
        /** @description レシピが見つからない */
        LikeRecipeNotFoundResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["NotFoundBody"];
            };
        };
        /** @description いいね削除成功 */
        UnlikeRecipeOkResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["LikeResultBody"];
            };
        };
        /** @description 不正なリクエスト */
        UnlikeRecipeBadRequestResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["InvalidCountryBody"];
            };
        };
        /** @description レシピが見つからない */
        UnlikeRecipeNotFoundResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["NotFoundBody"];
            };
        };
    };
    parameters: {
        /** @description 国コード */
        CountryHeaderParameter: string;
        /** @description レシピID */
        RecipeIdPathParameter: string;
        /** @description 取得する件数の上限 */
        CountQueryParameter: number;
        /** @description 取得する件数のオフセット */
        OffsetQueryParameter: number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getRecipeRanking: {
        parameters: {
            query?: {
                /** @description 取得する件数の上限 */
                count?: components["parameters"]["CountQueryParameter"];
                /** @description 取得する件数のオフセット */
                offset?: components["parameters"]["OffsetQueryParameter"];
            };
            header: {
                /** @description 国コード */
                "X-Country": components["parameters"]["CountryHeaderParameter"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetRecipeRankingOkResponse"];
            400: components["responses"]["GetRecipeRankingBadRequestResponse"];
            500: components["responses"]["InternalServerErrorResponse"];
        };
    };
    getRecipeById: {
        parameters: {
            query?: never;
            header: {
                /** @description 国コード */
                "X-Country": components["parameters"]["CountryHeaderParameter"];
            };
            path: {
                /** @description レシピID */
                recipeId: components["parameters"]["RecipeIdPathParameter"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetRecipeOkResponse"];
            400: components["responses"]["GetRecipeBadRequestResponse"];
            404: components["responses"]["GetRecipeNotFoundResponse"];
            500: components["responses"]["InternalServerErrorResponse"];
        };
    };
    likeRecipeById: {
        parameters: {
            query?: never;
            header: {
                /** @description 国コード */
                "X-Country": components["parameters"]["CountryHeaderParameter"];
            };
            path: {
                /** @description レシピID */
                recipeId: components["parameters"]["RecipeIdPathParameter"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["LikeRecipeOkResponse"];
            400: components["responses"]["LikeRecipeBadRequestResponse"];
            404: components["responses"]["LikeRecipeNotFoundResponse"];
            500: components["responses"]["InternalServerErrorResponse"];
        };
    };
    unlikeRecipeById: {
        parameters: {
            query?: never;
            header: {
                /** @description 国コード */
                "X-Country": components["parameters"]["CountryHeaderParameter"];
            };
            path: {
                /** @description レシピID */
                recipeId: components["parameters"]["RecipeIdPathParameter"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["UnlikeRecipeOkResponse"];
            400: components["responses"]["UnlikeRecipeBadRequestResponse"];
            404: components["responses"]["UnlikeRecipeNotFoundResponse"];
            500: components["responses"]["InternalServerErrorResponse"];
        };
    };
}
